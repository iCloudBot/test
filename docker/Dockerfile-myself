FROM nginx:stable-alpine-slim AS builder

ARG VERSION=v0.8.0
ENV ARCH=linux_amd64

COPY entrypoint-myself.sh /entrypoint.sh
COPY default-myself.conf /etc/nginx/conf.d/default.conf
COPY default2.conf /tmp/default.conf
COPY index.html /usr/share/nginx/html/index.html
COPY index.html /usr/share/nginx/html/main/index.html
COPY favicon.ico /usr/share/nginx/html/favicon.ico
COPY robots.txt /usr/share/nginx/html/robots.txt
COPY crproxy /usr/bin/crproxy

RUN apk upgrade --no-cache && \
    apk add tzdata wget openssl --no-cache && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  && \
    sed -i '/default_type/a\    server_tokens off;' /etc/nginx/nginx.conf && \
    ln -s /usr/share/nginx/html/index.html /usr/bin/ && \
    chmod +x /usr/bin/crproxy /entrypoint.sh

#  wget -O /usr/bin/crproxy https://github.com/DaoCloud/crproxy/releases/download/${VERSION}/crproxy_${ARCH} && \

FROM scratch
COPY --from=builder / /
LABEL maintainer="yanjh <cleverest@qq.com>"
ARG VERSION=v0.8.0

EXPOSE 80 443

ENTRYPOINT ["/entrypoint.sh"]

# FROM alpine:latest

# ARG VERSION=v0.8.0
# ENV ARCH=linux_amd64

# RUN apk upgrade --no-cache && \
#     apk add tzdata wget --no-cache && \
#     cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  && \
#     wget -O /usr/bin/crproxy https://github.com/DaoCloud/crproxy/releases/download/${VERSION}/crproxy_${ARCH} && \
#     chmod +x /usr/bin/crproxy

# EXPOSE 8080

# ENTRYPOINT ["/usr/bin/crproxy"]
