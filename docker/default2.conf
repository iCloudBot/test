server {
    listen 80;
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    server_tokens off;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
    proxy_send_timeout                  300;

    proxy_request_buffering             off; # (see issue #2292 - https://github.com/moby/moby/issues/2292)

    gzip on; # 开启gzip方式
    gzip_static on;
    gzip_types application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg image/gif image/png image/jpg;
    gzip_vary on;
    gzip_comp_level 1;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;

    #access_log  /var/log/nginx/host.access.log  main;

    # location / {
    #    root   /usr/share/nginx/html;
    #    index  index.html index.htm;
    # }

    error_page  404              /;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # 只读，拒绝所有写
    if ($request_method !~* GET|HEAD) {
        return 403;
    }

    location ^~ /main {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location ~ ^/v2/(user|orgs|_catalog|categories|feature-flags|repositories) {
        proxy_pass https://registry.hub.docker.com;
        proxy_set_header Host registry.hub.docker.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 处理特定注册表的请求
    location ~ ^/v2/(docker.io|gcr.io|ghcr.io|k8s.gcr.io|registry.k8s.io|quay.io|mcr.microsoft.com|docker.elastic.co|nvcr.io|registry.jujucharms.com|cr.l5d.io|public.ecr.aws)/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 处理所有其他 /v2/ 请求
    location ~ ^/v2/ {
        rewrite ^/v2/(.*)$ /v2/docker.io/$1 break;
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ ^/(|_|r|search|source|favicon.ico|auth/profile) {
        proxy_pass https://registry.hub.docker.com;
        proxy_set_header Host registry.hub.docker.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}